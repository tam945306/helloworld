AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS CodePipeline for React Hello World application'

Parameters:
  ProjectName:
    Type: String
    Default: 'helloworld-react'
    Description: 'Name of the project'
  
  CodeBuildProjectName:
    Type: String
    Default: 'helloworld-react-build'
    Description: 'Name of the CodeBuild project'
  
  SourceRepository:
    Type: String
    Default: 'https://github.com/yourusername/helloworld.git'
    Description: 'GitHub repository URL'
  
  SourceBranch:
    Type: String
    Default: 'main'
    Description: 'Source branch to build from'

Resources:
  # S3 Bucket for pipeline artifacts
  PipelineArtifactsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${ProjectName}-pipeline-artifacts-${AWS::AccountId}'
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  # IAM Role for CodePipeline
  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${ProjectName}-pipeline-service-role'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy:AdministratorAccess-AWSCodePipeline

  # CodePipeline
  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub '${ProjectName}-pipeline'
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineArtifactsBucket
      
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeCommit
                Version: '1'
              Configuration:
                RepositoryName: !Sub '${ProjectName}-repo'
                BranchName: !Ref SourceBranch
              OutputArtifacts:
                - Name: SourceCode
              RunOrder: 1
        
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref CodeBuildProjectName
              InputArtifacts:
                - Name: SourceCode
              OutputArtifacts:
                - Name: BuildOutput
              RunOrder: 1
        
        - Name: Deploy
          Actions:
            - Name: DeployToS3
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: S3
                Version: '1'
              Configuration:
                BucketName: !Sub '${ProjectName}-deployment-${AWS::AccountId}'
                Extract: true
              InputArtifacts:
                - Name: BuildOutput
              RunOrder: 1

  # S3 Bucket for deployment
  DeploymentBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${ProjectName}-deployment-${AWS::AccountId}'
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: index.html
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false

  # S3 Bucket Policy for public access (for static website)
  DeploymentBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref DeploymentBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: PublicReadGetObject
            Effect: Allow
            Principal: '*'
            Action: s3:GetObject
            Resource: !Sub '${DeploymentBucket}/*'

Outputs:
  PipelineName:
    Description: 'Name of the CodePipeline'
    Value: !Ref CodePipeline
    Export:
      Name: !Sub '${AWS::StackName}-Pipeline'
  
  DeploymentBucketName:
    Description: 'Name of the S3 bucket for deployment'
    Value: !Ref DeploymentBucket
    Export:
      Name: !Sub '${AWS::StackName}-DeploymentBucket'
  
  WebsiteURL:
    Description: 'URL of the deployed website'
    Value: !Sub 'http://${DeploymentBucket}.s3-website-${AWS::Region}.amazonaws.com'
    Export:
      Name: !Sub '${AWS::StackName}-WebsiteURL'
